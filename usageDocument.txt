Welcome to Gyro API & Usage document.
in this document, you will learn...

1.how to use engine properly.
2.the introduce for class and methods built in engine.
3.how to use global variable in engine properly.
Notice:
in this document, "as name" means the class and method's function are same as it's name.

========================================================
How to use engine properly?

1.check your Python libs, we need 2 libs that only built in ti-nspire cx ii.
2.once libs are exists, open tns file.
3.in engine, you will see everything is crowded, because I didn't follow for PEP-8 rules. so there is some new rules here:

.Use PascalCase for every class, method, function.
.use smallcase for every variable, dict, list.
.use UPPER_CASE for every constant.

so we don't use snake_case in engine.
========================================================
Introduce for class and methods.

classes:
Kernal-For most basic engine controls.
IO-as name.
UniFX-Universal VFX system.
|
-UniFX.BulletFX-bullet flare class.
Actors-Player and other entity class.
|-King-player class.
-Queen-npc class.
ActionUI-UI class.
Wbase-Weapon base.
StdUtil-Standard Utility class
Assets-Asset class(in engine, Assets class has some contents that for example.).

methods:
Kernal.quit-for quit engine.
Kernal.ErrChk-for command "forceexitonerror".
Kernal.WaitUpdate-for timer.
Kernal.ResetGame-as name.
Kernal.GameLauncher-the launching sequence for main function.
Kernal.Console-as name.
Kernal.Info-for engine infos.
Kernal.Opening-engine opening.
----------------------------------
IO.Save-for saving game.
IO.Load-for load game from file.
IO.Delete-for reset game file for default setting.
----------------------------------
UniFX.LowHealth-display a red rectangle on screen when Player is critical.
UniFX.BulletFX.BltFlr-bullet flare effects.
----------------------------------
Actors.King.Draw-draw player.
Actors.King.Init-initialize player.
Actors.Queen.Draw-draw npc.
----------------------------------
ActionUI.DispUi-display UI.
ActionUI.Title-display a text in fornt of screen.
----------------------------------
StdUtil.ConsoleLog-as name.
StdUtil.WaitStart-timer function that dosent stop engine.
StdUtil.Trigger-as name.
StdUtil.PauseMenu-as name.
StdUtil.MapStat-for map render,trigger and other stuff.
----------------------------------
Wbase.EventAmmoPick-as name.
Wbase.WeaponClip-the magazine in weapon.
----------------------------------
Assets.c0a0-map.
Assets.c1a0-map.
Assets.gmanintlol-intro.
Assets.gmaintro-intro.
Assets.MainMenu-as name.
----------------------------------
main-main function.
==================================================
How to use global variables properly in engine?

.global everything you need at function head, such as:
var1=1
var2=1
def FuncA():
  global var1,var2
  pass
----------------------------------
!Do not:
.global variables that you don't need.
.try to name your variables with a specific meaning.
.try to let one variable do a single task.
.try not to use dynamic typing in whole engine.
==================================================
Document ends in here, you can learn engine from this doc and
examples in engine.
